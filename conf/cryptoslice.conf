# Directory of apps for mass investigation
directory.apps = apps

# Directory of temporary files during the analysis
directory.bytecode = bytecode

# Subdir of bytecode for the unpacked .apk content
subdir.bytecode.apk = apk

# Subdir of bytecode for decompiled resources (smali, Manifest, etc.)
subdir.bytecode.decompiled = decompiled

# Keep unpacked/decoded files after analysis?
analysis.keep.files = true

# Decompile the .apk to Smali (needed for further steps!)
analysis.decompileapk.enable = true

# Do not re-decompile already decompiled .apk files
analysis.decompileapk.omitexisting = true

# Extract .apk content (done by Apktool anyway)
analysis.extractapk.enable = false

# Whether to perform heuristic search or not
analysis.heuristic.enable = false

# Output a summary report when analysis terminates
analysis.report.enable = true

# The folder where created reports are located
analysis.report.folder = reports

# The path to the XML report template
analysis.report.template = conf/report.stg

# Create a slice graph based on the previously obtained slicing results?
analysis.slicegraph.create = false

# The path to the Graphviz dot executable
analysis.slicegraph.dotexecutable = C:/Program Files (x86)/Graphviz/bin/dot

# The output format used by dot (svg, pdf, ps, png, etc.)
analysis.slicegraph.outputformat = svg

# Whether to perform the static slicing step or not
analysis.slicing.enable = true

# Globally enable/disable backward slicing
analysis.slicing.backward = false

# Globally enable/disable forward slicing
analysis.slicing.forward = false

# Max fuzzy level while slicing
analyis.slicing.maxfuzzylevel = 12

# Maximum amount of registers to track
analysis.slicing.maxrscount = 50000

# Whether to add JMP instructions to the slice tree (cosmetic issue)
analysis.slicing.includejmpintree = true

# Whether to print all sliced paths to a file
analysis.slicing.pathlogger = false

# Whether to automatically analyse the results from slicing
analysis.slicing.sliceanalysis = true

# Backtrace constants (previously obtained by slicing)
analysis.trace.slicingconst = false

# Filter out Ad-Networks while parsing Smali files
analysis.filter.adnetworks = true

# Filter out crypto libraries while parsing Smali files
analysis.filter.cryptolibs = true

# Match Manifest permissions with API calls
analysis.match.apicalls = false

# Perform a URL scan
analysis.urlscan.enable = true

# Perform a scan for secrets
analysis.secretscan.enable = true

# The file that provides the ad-network definitions
datasource.adnetworks = conf/blacklist-adnetworks.xml

# The file that provides the schema to validate the blacklist definitions
datasource.blacklist.schema = conf/schema/blacklist.xsd

# The file that provides the crypto libraries definitions
datasource.cryptolibs = conf/blacklist-cryptolibs.xml

# The file that provides the heuristic pattern definitions
datasource.heuristic = conf/heuristic-patterns.xml

# The file that provides the schema to validate the heuristic pattern definitions
datasource.heuristic.schema = conf/schema/heuristic-patterns.xsd

# The file that provides a mapping of permissions and API calls
datasource.permissionmap = conf/permission-map.txt

# The file that provides the slicing pattern definitions
datasource.slicing = conf/slicing-patterns.xml

# The file that provides the schema to validate the slicing pattern definitions
datasource.slicing.schema = conf/schema/slicing-patterns.xsd

# Concurrent analysis of multiple apps
multithreading.enable = false

# If multithreading is enabled, the amount of threads to use.
# If not defined at all -> determined automatically (CPU cores - 1)
#multithreading.threads = 5